{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpenseItem from \"../Expenses/ExpenseItem\";\nimport './Expenses.css';\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const filteredExpenses = props.item.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const filterChanger = selectedYear => {\n    console.log('Expeses.Js');\n    console.log(props.items);\n    setFilteredYear(selectedYear);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selectedYear: filteredYear,\n        onChangeFilter: filterChanger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), filteredExpenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data in the list \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 51\n      }, this) : filteredExpenses.map((expense, index) => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 122\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/React/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["react","useState","Card","ExpenseItem","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filteredExpenses","item","filter","expense","date","getFullYear","toString","filterChanger","selectedYear","console","log","items","length","map","index","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;AAEA,QAAMQ,gBAAgB,GAAGH,KAAK,CAACI,IAAN,CAAWC,MAAX,CAAkBC,OAAO,IAAI;AAClD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CR,YAAjD;AACH,GAFwB,CAAzB;;AAIA,QAAMS,aAAa,GAAIC,YAAD,IAAkB;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACc,KAAlB;AACAZ,IAAAA,eAAe,CAACS,YAAD,CAAf;AACH,GAJD;;AAMA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,YAAY,EAAEV,YAA9B;AAA4C,QAAA,cAAc,EAAES;AAA5D;AAAA;AAAA;AAAA;AAAA,cADJ,EAKMP,gBAAgB,CAACY,MAAjB,KAA4B,CAA5B,gBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,GAA8DZ,gBAAgB,CAACa,GAAjB,CAAqB,CAACV,OAAD,EAAUW,KAAV,kBAAoB,QAAC,WAAD;AAA8B,QAAA,KAAK,EAAEX,OAAO,CAACY,KAA7C;AAAoD,QAAA,MAAM,EAAEZ,OAAO,CAACa,MAApE;AAA4E,QAAA,IAAI,EAAEb,OAAO,CAACC;AAA1F,SAAkBD,OAAO,CAACc,EAA1B;AAAA;AAAA;AAAA;AAAA,cAAzC,CALpE;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA1BD;;GAAMrB,Q;;KAAAA,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import react, {useState} from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseItem from \"../Expenses/ExpenseItem\";\r\nimport './Expenses.css';\r\nimport ExpensesFilter from \"./ExpenseFilter\";\r\n\r\nconst Expenses = (props) => {\r\n\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n    \r\n    const filteredExpenses = props.item.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    const filterChanger = (selectedYear) => {\r\n        console.log('Expeses.Js');\r\n        console.log(props.items);\r\n        setFilteredYear(selectedYear);\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <Card className=\"expenses\">\r\n                <ExpensesFilter selectedYear={filteredYear} onChangeFilter={filterChanger}></ExpensesFilter>\r\n            \r\n                {/* Add keys when mapping out an item on your list */}\r\n                {/* Conditional listing (Output list depending on a condition) */}\r\n                { filteredExpenses.length === 0 ? <p>No data in the list </p> : filteredExpenses.map((expense, index) => <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date}/>) }\r\n            </Card>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}