{"ast":null,"code":"import _toConsumableArray from\"C:/React/01-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/React/01-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Expenses from\"./components/Expenses/Expenses\";import NewExpense from\"./components/NewExpense/NewExpense\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var dummy_data=[// {\n//   id: \"e1\",\n//   title: \"Toilet Paper\",\n//   amount: 94.12,\n//   date: new Date(2020, 7, 14),\n// },\n// {\n//   id: \"e2\",\n//   title: \"New TV\",\n//   amount: 799.49,\n//   date: new Date(2021, 2, 12),\n// },\n// {\n//   id: \"e3\",\n//   title: \"Car Insurance\",\n//   amount: 294.67,\n//   date: new Date(2021, 2, 28),\n// },\n// {\n//   id: \"e4\",\n//   title: \"New Desk (Wooden)\",\n//   amount: 450,\n//   date: new Date(2021, 5, 12),\n// },\n// {\n//   id: \"e5\",\n//   title: \"New Laptop\",\n//   amount: 890,\n//   date: new Date(2022, 8, 6)\n// }\n];function App(){var _useState=useState(dummy_data),_useState2=_slicedToArray(_useState,2),currentExpensesData=_useState2[0],newExpensesData=_useState2[1];var addExpenseHander=function addExpenseHander(expense){// This updates the list we have dynamically\nnewExpensesData(function(previousExpenses){return[expense].concat(_toConsumableArray(previousExpenses));});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NewExpense,{expensePointer:addExpenseHander}),/*#__PURE__*/_jsx(Expenses,{item:currentExpensesData})]});// If we did not use JSX, this is how we would be returning on the App.js, but it is harder to read and implement\n// return React.createElement(\n//   'div', \n//   {}, \n//   React.createElement('h2', {}, 'Lets get started'), \n//   React.createElement(Expenses, {item: expenses})\n// );\n}export default App;","map":{"version":3,"sources":["C:/React/01-starting-setup/src/App.js"],"names":["React","useState","Expenses","NewExpense","dummy_data","App","currentExpensesData","newExpensesData","addExpenseHander","expense","previousExpenses"],"mappings":"0SAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oCAAvB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,CACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BiB,CAAnB,CAiCA,QAASC,CAAAA,GAAT,EAAe,CAEb,cAA+CJ,QAAQ,CAACG,UAAD,CAAvD,wCAAOE,mBAAP,eAA4BC,eAA5B,eAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,OAAD,CAAa,CACpC;AACAF,eAAe,CAAE,SAAAG,gBAAgB,CAAI,CACnC,OAAQD,OAAR,4BAAoBC,gBAApB,GACD,CAFc,CAAf,CAGD,CALD,CAOA,mBACE,oCACE,KAAC,UAAD,EAAY,cAAc,CAAEF,gBAA5B,EADF,cAEE,KAAC,QAAD,EAAU,IAAI,CAAEF,mBAAhB,EAFF,GADF,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["import React, {useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst dummy_data = [\n  // {\n  //   id: \"e1\",\n  //   title: \"Toilet Paper\",\n  //   amount: 94.12,\n  //   date: new Date(2020, 7, 14),\n  // },\n  // {\n  //   id: \"e2\",\n  //   title: \"New TV\",\n  //   amount: 799.49,\n  //   date: new Date(2021, 2, 12),\n  // },\n  // {\n  //   id: \"e3\",\n  //   title: \"Car Insurance\",\n  //   amount: 294.67,\n  //   date: new Date(2021, 2, 28),\n  // },\n  // {\n  //   id: \"e4\",\n  //   title: \"New Desk (Wooden)\",\n  //   amount: 450,\n  //   date: new Date(2021, 5, 12),\n  // },\n  // {\n  //   id: \"e5\",\n  //   title: \"New Laptop\",\n  //   amount: 890,\n  //   date: new Date(2022, 8, 6)\n  // }\n];\n\nfunction App() {\n\n  const [currentExpensesData, newExpensesData] = useState(dummy_data);\n\n  const addExpenseHander = (expense) => {\n    // This updates the list we have dynamically\n    newExpensesData((previousExpenses => {\n      return [expense, ...previousExpenses];\n    }));\n  }\n\n  return (\n    <div>\n      <NewExpense expensePointer={addExpenseHander}/>\n      <Expenses item={currentExpensesData}/>\n    </div>\n  );\n\n  // If we did not use JSX, this is how we would be returning on the App.js, but it is harder to read and implement\n  // return React.createElement(\n  //   'div', \n  //   {}, \n  //   React.createElement('h2', {}, 'Lets get started'), \n  //   React.createElement(Expenses, {item: expenses})\n  // );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}